name: SonarQube Analysis with Quality Gate

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  build-and-analyze:
    name: Build, Analyze, and Check Quality Gate
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'temurin'
          cache: maven

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and run tests
        run: mvn -B clean verify

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
        with:
          args: >
            -Dsonar.projectKey=elytra-tqs_stations-management
            -Dsonar.organization=elytra-tqs
            -Dsonar.sources=src/main/java
            -Dsonar.tests=src/test/java
            -Dsonar.java.binaries=target/classes
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
            -Dsonar.verbose=true


      # - name: SonarQube Quality Gate check
      #   id: sonarqube-quality-gate-check
      #   uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   with:
      #     scanMetadataReportFile: .scannerwork/report-task.txt
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_HOST_URL: https://sonarcloud.io
      
      # - name: Check SonarQube report file
      #   run: |
      #     echo "Checking for report file..."
      #     if [ -f .scannerwork/report-task.txt ]; then
      #       echo "Report file found. Contents:"
      #       cat .scannerwork/report-task.txt
      #     else
      #       echo "Report file not found. Contents of .scannerwork directory:"
      #       ls -la .scannerwork/ || echo ".scannerwork directory not found"
      #     fi
      #   continue-on-error: true

      # - name: "SonarQube Quality Gate Status"
      #   run: echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"

      # - name: "Fail if Quality Gate fails"
      #   if: steps.sonarqube-quality-gate-check.outputs.quality-gate-status == 'FAILED'
      #   run: exit 1
